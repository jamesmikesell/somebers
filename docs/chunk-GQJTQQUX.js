import{T as s,g as a}from"./chunk-DUPXJZ6A.js";import{c as r}from"./chunk-AH3KB6OD.js";var i=class l{deferredPrompt=null;hasPromptBeenShown=!1;canInstall$=new a(!1);installInProgress$=new a(!1);installError$=new a(null);installOutcome$=new a(null);isInstalled$=new a(!1);constructor(){this.initializeService()}initializeService(){try{this.updateInstalledState(),window.addEventListener("beforeinstallprompt",this.onBeforeInstallPrompt.bind(this)),window.addEventListener("appinstalled",this.onAppInstalled.bind(this)),this.setupDisplayModeListener(),this.checkInstallability()}catch(e){console.error("pwa-install: initialization failed",e)}}onBeforeInstallPrompt(e){try{e.preventDefault(),this.deferredPrompt=e,this.canInstall$.next(!0)}catch(t){console.error("pwa-install: beforeinstallprompt handler failed",t)}}onAppInstalled(){try{this.installOutcome$.next("accepted"),this.canInstall$.next(!1),this.deferredPrompt=null,this.installInProgress$.next(!1),this.updateInstalledState()}catch(e){console.error("pwa-install: appinstalled handler failed",e)}}setupDisplayModeListener(){try{if(!window.matchMedia)return;let e=window.matchMedia("(display-mode: standalone)"),t=()=>this.updateInstalledState();e.addEventListener?e.addEventListener("change",t):e.addListener&&e.addListener(t)}catch(e){console.error("pwa-install: display mode listener setup failed",e)}}checkInstallability(){try{if(this.computeInstalled()){this.canInstall$.next(!1);return}}catch(e){console.error("pwa-install: installability check failed",e)}}updateInstalledState(){let e=this.computeInstalled();this.isInstalled$.next(e),e&&this.canInstall$.next(!1)}computeInstalled(){try{let e=window.matchMedia?.("(display-mode: standalone)")?.matches===!0,t=this.isIOSStandalone(),n=window.matchMedia?.("(display-mode: minimal-ui)")?.matches===!0;return e||t||n}catch(e){return console.error("pwa-install: installed state computation failed",e),!1}}isIOSStandalone(){try{return navigator.standalone===!0}catch{return!1}}promptInstall(){return r(this,null,function*(){this.installError$.next(null),this.installOutcome$.next(null);let e=this.deferredPrompt;if(!e){this.installError$.next("Installation not available");return}if(this.hasPromptBeenShown){this.installError$.next("Installation prompt already shown");return}this.installInProgress$.next(!0),this.hasPromptBeenShown=!0;try{yield e.prompt();let n=(yield e.userChoice)?.outcome==="accepted"?"accepted":"dismissed";this.installOutcome$.next(n),this.deferredPrompt=null,n==="accepted"&&this.canInstall$.next(!1)}catch(t){console.error("pwa-install: prompt failed",t),this.installError$.next(t instanceof Error?t.message:"Installation failed. Please try again later.")}finally{this.installInProgress$.next(!1),setTimeout(()=>{this.hasPromptBeenShown=!1},1e3)}})}isPWASupported(){try{let e="serviceWorker"in navigator,t=document.querySelector('link[rel="manifest"]');return e&&!!t}catch{return!1}}refreshInstallabilityState(){this.updateInstalledState(),this.checkInstallability()}static \u0275fac=function(t){return new(t||l)};static \u0275prov=s({token:l,factory:l.\u0275fac,providedIn:"root"})};export{i as a};
