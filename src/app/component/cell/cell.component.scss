:host {
  position: relative;
  // These need to be defined in the parent component css... if things are displaying weird it's likely because
  // the defaults are being used here as it can't find the value specified in the parent.
  --_headerSpacing: var(--headerSpacing, -100px);
  --_cellGap: var(--cellGap, -100px);
}


.disable-animation,
.disable-animation *,
.disable-animation::before,
.disable-animation::after,
.disable-animation *::before,
.disable-animation *::after {
  animation: none !important;
  transition: none !important;
}


.cell-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  border-radius: inherit;
}

.cell-fade::before {
  // background fading
  transition: filter 0.5s ease-out, opacity 0.5s ease-out;
}

.bg-muted {
  color: var(--mat-sys-on-surface-variant);

  &::before {
    background: var(--mat-sys-surface-variant);
  }
}

.bg-muted.hidden.cell {
  box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--mat-sys-surface-variant);
}

.color {
  &::before {
    background-color: var(--cellColor);
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--cellColor);
  }
}

.shape.shape-1::before {
  background: transparent;
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  background-color: var(--cellColor);
  border-radius: 0;
}

.shape.shape-2::before {
  background: transparent;
  clip-path: polygon(20% 0%, 80% 0%, 80% 20%, 100% 20%, 100% 80%, 80% 80%, 80% 100%, 20% 100%, 20% 80%, 0% 80%, 0% 20%, 20% 20%);
  background-color: var(--cellColor);
  border-radius: 0;
}

.shape.shape-3::before {
  background: transparent;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  background-color: var(--cellColor);
  border-radius: 0;
}

.shape.shape-4::before {
  background: transparent;
  clip-path: polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
  background-color: var(--cellColor);
  border-radius: 0;
}

.shape.shape-5::before {
  background: transparent;
  clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
  background-color: var(--cellColor);
  border-radius: 0;
}

.shape.shape-6::before {
  background: transparent;
  clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 50% 100%, 0% 75%);
  background-color: var(--cellColor);
  border-radius: 0;
}

.shape.shape-7::before {
  background: transparent;
  clip-path: polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%);
  background-color: var(--cellColor);
  border-radius: 0;
}

.shape.shape-8::before {
  background: transparent;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  background-color: var(--cellColor);
  border-radius: 0;
}

// .shape.shape-9::before {
//   // no need for a custom shape, we'll just leave one of the cells with a solid BG
// }

.cell {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  aspect-ratio: 1;
  border-radius: calc(6cqmin / var(--columnCount));
  width: calc((100cqmin - var(--_headerSpacing) - ((var(--columnCount) - 2) * var(--_cellGap)))/ var(--columnCount));
}

.cell.hidden::before {
  filter: blur(10px);
  opacity: 0;
}

.corner-number {
  position: absolute;
  top: 0cqmin;
  left: 0cqmin;
  font-size: calc(21cqmin / var(--columnCount));
  padding-left: calc(3.9cqmin / var(--columnCount) );
  padding-right: calc(3.9cqmin / var(--columnCount) );
  border-radius: calc(6cqmin / var(--columnCount) );
  text-align: center;
}

.hidden .corner-number {
  visibility: hidden;
}

.main-number {
  font-size: calc(51cqmin / var(--columnCount));
  transition: filter 0.5s ease-out, opacity 0.5s ease-out;
}

.main-number.cleared-text {
  filter: blur(5px);
  opacity: 0;
}

.circle {
  border: 0.5cqmin solid;
  border-radius: 50%;
  width: calc(60cqmin / var(--columnCount));
  height: calc(60cqmin / var(--columnCount));
  display: flex;
  align-items: center;
  justify-content: center;
}

.main-number.highlighted::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
  width: calc(60cqmin / var(--columnCount));
  height: calc(60cqmin / var(--columnCount));
  pointer-events: none;
  z-index: 1;
  box-sizing: border-box;
  background: transparent;
  border: calc(5cqmin / var(--columnCount)) solid red;
}

.main-number.highlighted::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
  width: calc(60cqmin / var(--columnCount));
  height: calc(60cqmin / var(--columnCount));
  pointer-events: none;
  z-index: 2;
  box-sizing: border-box;
  background: transparent;
  border: calc(5cqmin / var(--columnCount)) dotted white;
}

@keyframes wiggle {

  0%,
  100% {
    transform: rotate(0deg) translateX(0);
  }

  10% {
    transform: rotate(14deg) translateX(-5px);
  }

  30% {
    transform: rotate(-8deg) translateX(5px);
  }

  50% {
    transform: rotate(4deg) translateX(-3px);
  }

  70% {
    transform: rotate(-2deg) translateX(3px);
  }

  90% {
    transform: rotate(1deg) translateX(0);
  }
}

.wiggle {
  animation: wiggle 0.8s ease-in-out;
}

@keyframes shrinkDashed {
  0% {
    transform: scale(2);
  }

  100% {
    transform: scale(1);
  }
}

.processing::after {
  content: '';
  position: absolute;
  inset: calc(10cqmin / var(--columnCount));
  border: calc(3cqmin / var(--columnCount)) dashed light-dark(rgb(0, 106, 255), rgba(0, 200, 255, 0.8));
  border-radius: 50%;
  transform-origin: center;
  animation: shrinkDashed 1s ease-out forwards;
  z-index: 1;
}

@keyframes magnify-and-move {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  30% {
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  }

  100% {
    transform: scale(var(--scaleFactor)) translateY(calc(-60cqmin / var(--columnCount))) translateX(var(--moveX));
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  }
}

.magnifier-view {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;

  .cell {
    animation: magnify-and-move 0.15s ease-out forwards;
    flex: 0 0 auto;
    background-color: var(--mat-sys-background);
  }
}
